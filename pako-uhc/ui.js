const { ActionRowBuilder, ButtonBuilder, ButtonStyle, EmbedBuilder } = require('discord.js');
const { readTeams } = require('./uhcStorage');

function generateTeamList() {
  const teams = readTeams();
  if (Object.keys(teams).length === 0) return '‚ùå –ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.';

  return Object.values(teams)
    .map((team, i) => `**${i + 1}. ${team.name}** ‚Äî <@${team.leader}> + <@${team.teammate}>`)
    .join('\n');
}

async function createUHCRegistrationMessage(channel) {
  const embed = new EmbedBuilder()
    .setTitle('üèÜ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ Pako UHC —Ç—É—Ä–Ω–∏—Ä')
    .setDescription(generateTeamList())
    .setColor(0x00ff88)
    .setFooter({ text: '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É' });

  const row = new ActionRowBuilder().addComponents(
    new ButtonBuilder()
      .setCustomId('uhc_register')
      .setLabel('üì• –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è')
      .setStyle(ButtonStyle.Success),
    new ButtonBuilder()
      .setCustomId('uhc_edit')
      .setLabel('üîÅ –ò–∑–º–µ–Ω–∏—Ç—å —Å–æ—Å—Ç–∞–≤')
      .setStyle(ButtonStyle.Primary),
    new ButtonBuilder()
      .setCustomId('uhc_cancel')
      .setLabel('‚ùå –£–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É')
      .setStyle(ButtonStyle.Danger),
  );

  await channel.send({ embeds: [embed], components: [row] });
}

module.exports = { createUHCRegistrationMessage };
